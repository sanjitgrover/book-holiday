"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const aws_cdk_lib_1 = require("aws-cdk-lib");
const path_1 = require("path");
const aws_apigateway_1 = require("aws-cdk-lib/aws-apigateway");
const GenericTable_1 = require("./GenericTable");
const aws_lambda_nodejs_1 = require("aws-cdk-lib/aws-lambda-nodejs");
const aws_iam_1 = require("aws-cdk-lib/aws-iam");
class SpaceStack extends aws_cdk_lib_1.Stack {
    constructor(scope, id, props) {
        super(scope, id, props);
        this.api = new aws_apigateway_1.RestApi(this, 'SpaceApi');
        this.spacesTable = new GenericTable_1.GenericTable('SpaceTable', 'spaceId', this);
        const helloLambdaNodeJs = new aws_lambda_nodejs_1.NodejsFunction(this, 'helloLambdanode', {
            entry: (path_1.join(__dirname, '..', 'services', 'node-lambda', 'hello.ts')),
            handler: 'handler'
        });
        const s3ListPolicy = new aws_iam_1.PolicyStatement();
        s3ListPolicy.addActions('s3:ListAllMyBuckets');
        s3ListPolicy.addResources('*');
        helloLambdaNodeJs.addToRolePolicy(s3ListPolicy);
        const helloLambdaIntegration = new aws_apigateway_1.LambdaIntegration(helloLambdaNodeJs);
        const helloLambdaResource = this.api.root.addResource('hello');
        helloLambdaResource.addMethod('GET', helloLambdaIntegration);
    }
}
exports.SpaceStack = SpaceStack;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiU3BhY2VTdGFjay5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIlNwYWNlU3RhY2sudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7QUFBQSw2Q0FBOEM7QUFHOUMsK0JBQTRCO0FBQzVCLCtEQUFzRTtBQUN0RSxpREFBNEM7QUFDNUMscUVBQTZEO0FBQzdELGlEQUFvRDtBQUVwRCxNQUFhLFVBQVcsU0FBUSxtQkFBSztJQUtqQyxZQUFZLEtBQWdCLEVBQUUsRUFBVSxFQUFFLEtBQWlCO1FBQ3ZELEtBQUssQ0FBQyxLQUFLLEVBQUUsRUFBRSxFQUFFLEtBQUssQ0FBQyxDQUFBO1FBSm5CLFFBQUcsR0FBRyxJQUFJLHdCQUFPLENBQUMsSUFBSSxFQUFFLFVBQVUsQ0FBQyxDQUFDO1FBQ3BDLGdCQUFXLEdBQUMsSUFBSSwyQkFBWSxDQUFDLFlBQVksRUFBRSxTQUFTLEVBQUUsSUFBSSxDQUFDLENBQUM7UUFNaEUsTUFBTSxpQkFBaUIsR0FBRyxJQUFJLGtDQUFjLENBQUMsSUFBSSxFQUFFLGlCQUFpQixFQUFDO1lBQ2pFLEtBQUssRUFBRSxDQUFDLFdBQUksQ0FBQyxTQUFTLEVBQUUsSUFBSSxFQUFFLFVBQVUsRUFBQyxhQUFhLEVBQUMsVUFBVSxDQUFDLENBQUU7WUFDcEUsT0FBTyxFQUFDLFNBQVM7U0FFcEIsQ0FBQyxDQUFDO1FBRUgsTUFBTSxZQUFZLEdBQUcsSUFBSSx5QkFBZSxFQUFFLENBQUM7UUFDM0MsWUFBWSxDQUFDLFVBQVUsQ0FBQyxxQkFBcUIsQ0FBQyxDQUFDO1FBQy9DLFlBQVksQ0FBQyxZQUFZLENBQUMsR0FBRyxDQUFDLENBQUM7UUFDL0IsaUJBQWlCLENBQUMsZUFBZSxDQUFDLFlBQVksQ0FBQyxDQUFDO1FBRWhELE1BQU0sc0JBQXNCLEdBQUcsSUFBSSxrQ0FBaUIsQ0FBQyxpQkFBaUIsQ0FBQyxDQUFDO1FBQ3hFLE1BQU0sbUJBQW1CLEdBQUMsSUFBSSxDQUFDLEdBQUcsQ0FBQyxJQUFJLENBQUMsV0FBVyxDQUFDLE9BQU8sQ0FBQyxDQUFDO1FBQzdELG1CQUFtQixDQUFDLFNBQVMsQ0FBQyxLQUFLLEVBQUUsc0JBQXNCLENBQUMsQ0FBQztJQUNqRSxDQUFDO0NBQ0o7QUF4QkQsZ0NBd0JDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHtTdGFjaywgU3RhY2tQcm9wc30gZnJvbSAnYXdzLWNkay1saWInO1xuaW1wb3J0IHsgQ29uc3RydWN0IH0gZnJvbSAnY29uc3RydWN0cyc7XG5pbXBvcnQge0NvZGUsIEZ1bmN0aW9uIGFzIExhbWJkYUZ1bmN0aW9uLCBSdW50aW1lfSBmcm9tICdhd3MtY2RrLWxpYi9hd3MtbGFtYmRhJztcbmltcG9ydCB7IGpvaW4gfSBmcm9tICdwYXRoJztcbmltcG9ydCB7UmVzdEFwaSwgTGFtYmRhSW50ZWdyYXRpb259IGZyb20gJ2F3cy1jZGstbGliL2F3cy1hcGlnYXRld2F5JztcbmltcG9ydCB7R2VuZXJpY1RhYmxlfSBmcm9tICcuL0dlbmVyaWNUYWJsZSc7XG5pbXBvcnQge05vZGVqc0Z1bmN0aW9ufSBmcm9tICdhd3MtY2RrLWxpYi9hd3MtbGFtYmRhLW5vZGVqcyc7XG5pbXBvcnQge1BvbGljeVN0YXRlbWVudH0gZnJvbSAnYXdzLWNkay1saWIvYXdzLWlhbSc7XG5cbmV4cG9ydCBjbGFzcyBTcGFjZVN0YWNrIGV4dGVuZHMgU3RhY2t7XG4gICAgXG4gICAgcHJpdmF0ZSBhcGkgPSBuZXcgUmVzdEFwaSh0aGlzLCAnU3BhY2VBcGknKTtcbiAgICBwcml2YXRlIHNwYWNlc1RhYmxlPW5ldyBHZW5lcmljVGFibGUoJ1NwYWNlVGFibGUnLCAnc3BhY2VJZCcsIHRoaXMpO1xuICAgIFxuICAgIGNvbnN0cnVjdG9yKHNjb3BlOiBDb25zdHJ1Y3QsIGlkOiBzdHJpbmcsIHByb3BzOiBTdGFja1Byb3BzKXtcbiAgICAgICAgc3VwZXIoc2NvcGUsIGlkLCBwcm9wcylcblxuICAgIFxuICAgICAgICBjb25zdCBoZWxsb0xhbWJkYU5vZGVKcyA9IG5ldyBOb2RlanNGdW5jdGlvbih0aGlzLCAnaGVsbG9MYW1iZGFub2RlJyx7XG4gICAgICAgICAgICBlbnRyeTogKGpvaW4oX19kaXJuYW1lLCAnLi4nLCAnc2VydmljZXMnLCdub2RlLWxhbWJkYScsJ2hlbGxvLnRzJykgKSxcbiAgICAgICAgICAgIGhhbmRsZXI6J2hhbmRsZXInXG5cbiAgICAgICAgfSk7XG4gICAgICAgIFxuICAgICAgICBjb25zdCBzM0xpc3RQb2xpY3kgPSBuZXcgUG9saWN5U3RhdGVtZW50KCk7XG4gICAgICAgIHMzTGlzdFBvbGljeS5hZGRBY3Rpb25zKCdzMzpMaXN0QWxsTXlCdWNrZXRzJyk7XG4gICAgICAgIHMzTGlzdFBvbGljeS5hZGRSZXNvdXJjZXMoJyonKTtcbiAgICAgICAgaGVsbG9MYW1iZGFOb2RlSnMuYWRkVG9Sb2xlUG9saWN5KHMzTGlzdFBvbGljeSk7XG4gICAgICAgIFxuICAgICAgICBjb25zdCBoZWxsb0xhbWJkYUludGVncmF0aW9uID0gbmV3IExhbWJkYUludGVncmF0aW9uKGhlbGxvTGFtYmRhTm9kZUpzKTtcbiAgICAgICAgY29uc3QgaGVsbG9MYW1iZGFSZXNvdXJjZT10aGlzLmFwaS5yb290LmFkZFJlc291cmNlKCdoZWxsbycpO1xuICAgICAgICBoZWxsb0xhbWJkYVJlc291cmNlLmFkZE1ldGhvZCgnR0VUJywgaGVsbG9MYW1iZGFJbnRlZ3JhdGlvbik7XG4gICAgfVxufSJdfQ==